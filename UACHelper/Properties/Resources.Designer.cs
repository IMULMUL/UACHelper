//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UACHelper.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UACHelper.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access denied..
        /// </summary>
        internal static string Error_AccessDenied {
            get {
                return ResourceManager.GetString("Error_AccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shell window not found..
        /// </summary>
        internal static string Error_NoShellWindow {
            get {
                return ResourceManager.GetString("Error_NoShellWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom verbs are not supported for starting an elevated process..
        /// </summary>
        internal static string Error_StartElevatedFailed_CustomVerbs {
            get {
                return ResourceManager.GetString("Error_StartElevatedFailed_CustomVerbs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CreateProcess is not supported for starting an elevated process. Consider using ShellExecute by setting UseShellExecute to true..
        /// </summary>
        internal static string Error_StartElevatedFailed_NoShellExecute {
            get {
                return ResourceManager.GetString("Error_StartElevatedFailed_NoShellExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not start an elevated version of the program as UAC is disable. Use the Process.Start method and ask the user for Login Credentials..
        /// </summary>
        internal static string Error_StartElevatedFailed_UACDisable {
            get {
                return ResourceManager.GetString("Error_StartElevatedFailed_UACDisable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not start the process in limited mode..
        /// </summary>
        internal static string Error_StartLimitedFailed {
            get {
                return ResourceManager.GetString("Error_StartLimitedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not start the process with the provided user name. Use the Process.Start method instead..
        /// </summary>
        internal static string Error_StartWithUsername {
            get {
                return ResourceManager.GetString("Error_StartWithUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This method is not supported in current environment..
        /// </summary>
        internal static string Error_This_method_is_not_supported_in_current_environment {
            get {
                return ResourceManager.GetString("Error_This_method_is_not_supported_in_current_environment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error happened..
        /// </summary>
        internal static string Error_Unknown {
            get {
                return ResourceManager.GetString("Error_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Address can not be empty..
        /// </summary>
        internal static string StartInfo_Address_Error {
            get {
                return ResourceManager.GetString("StartInfo_Address_Error", resourceCulture);
            }
        }
    }
}
